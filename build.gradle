//file:noinspection GroovyAssignabilityCheck
buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
        maven {
            url "https://jitpack.io"
            content {
                excludeGroup "com.github.ben-manes.versions"
            }
        }
    }
}

plugins {
    id 'java-library'
    id 'maven-publish'
    id 'checkstyle'
    id 'idea'
    id 'pmd'
    id 'jacoco'
    id 'org.owasp.dependencycheck' version '7.4.4'
    id 'org.sonarqube' version '3.3'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'org.springframework.boot' version '2.6.7'
    id 'com.github.ben-manes.versions' version '0.41.0'
}

apply plugin: 'com.github.ben-manes.versions'

group = 'uk.gov.hmcts'
version = System.getenv('RELEASE_VERSION')?.replace('refs/tags/', '') ?: 'DEV-SNAPSHOT'

bootJar {
    enabled = false
}

jar {
    enabled = true
    classifier = ''
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
    withSourcesJar()
}

tasks.withType(JavaCompile) {
    options.compilerArgs << "-Xlint:unchecked" << "-Werror"
}

// https://github.com/gradle/gradle/issues/16791
tasks.withType(JavaExec).configureEach {
    javaLauncher.set(javaToolchains.launcherFor(java.toolchain))
}

tasks.withType(Test) {
    useJUnitPlatform()

    testLogging {
        exceptionFormat = 'full'
    }
}

test {
    failFast = true
    useJUnitPlatform()
}

checkstyle {
    maxWarnings = 0
    toolVersion = '9.2.1'
    getConfigDirectory().set(new File(rootDir, 'config/checkstyle'))
}

pmd {
    toolVersion = "6.18.0"
    sourceSets = [sourceSets.main]
    reportsDir = file("$project.buildDir/reports/pmd")
    // https://github.com/pmd/pmd/issues/876
    ruleSets = []
    ruleSetFiles = files("${rootDir}/config/pmd/ruleset.xml")
}

jacocoTestReport {
//    executionData(test, integration)
    executionData(test)
    reports {
        xml.getRequired().set(true)
        csv.getRequired().set(false)
        xml.destination file("${buildDir}/reports/jacoco/test/jacocoTestReport.xml")
    }
}

// https://jeremylong.github.io/DependencyCheck/dependency-check-gradle/configuration.html
dependencyCheck {
    // Specifies if the build should be failed if a CVSS score above a specified level is identified.
    // range of 0-10 fails the build, anything greater and it doesn't fail the build
    failBuildOnCVSS = System.getProperty('dependencyCheck.failBuild') == 'true' ? 0 : 11
    suppressionFile = 'config/owasp/suppressions.xml'
    outputDirectory = 'build/reports/'

    analyzers {
        // Disable scanning of .NET related binaries
        assemblyEnabled = false
    }
}

project.tasks['sonarqube'].dependsOn jacocoTestReport

sonarqube {
    properties {
        property "sonar.projectName", "Divorce :: nfdiv-case-api"
        property "sonar.projectKey", "uk.gov.hmcts.reform:nfdiv-case-api"
        property "sonar.coverage.jacoco.xmlReportPaths", "${projectDir}/build/reports/jacoco/test/jacocoTestReport.xml"
        property "sonar.exclusions", sonarExclusions.join(', ')
    }
}


// before committing a change, make sure task still works
dependencyUpdates {
    def isNonStable = { String version ->
        def stableKeyword = ['RELEASE', 'FINAL', 'GA'].any { qualifier -> version.toUpperCase().contains(qualifier) }
        def regex = /^[0-9,.v-]+$/
        return !stableKeyword && !(version ==~ regex)
    }
    rejectVersionIf { selection -> // <---- notice how the closure argument is named
        return isNonStable(selection.candidate.version) && !isNonStable(selection.currentVersion)
    }
}

dependencyManagement {
    dependencies {
        dependency group: 'org.bouncycastle', name: 'bcpkix-jdk15on', version: '1.70'
        // CVE-2018-10237 - Unbounded memory allocation
        dependencySet(group: 'com.google.guava', version: '31.1-jre') {
            entry 'guava'
        }
    }
}

repositories {
    mavenLocal()
    mavenCentral()
    maven { url 'https://jitpack.io' }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
}

def versions = [
    jackson                 : '2.13.1',
    junit                   : '5.8.2',
    junitPlatform           : '1.8.2',
    lombok                  : '1.18.22',
    springBoot              : springBoot.class.package.implementationVersion,
    reformLoggingVersion    : '5.1.9',
    log4JVersion            : '2.17.1'
]

ext["rest-assured.version"] = '4.4.0'

ext.libraries = [
    junit5: [
        "org.junit.jupiter:junit-jupiter-api:${versions.junit}",
        "org.junit.jupiter:junit-jupiter-engine:${versions.junit}",
        "org.junit.jupiter:junit-jupiter-params:${versions.junit}",
        "org.junit.platform:junit-platform-commons:${versions.junitPlatform}",
        "org.junit.platform:junit-platform-engine:${versions.junitPlatform}"
    ]
]

dependencies {

    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: versions.jackson
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-core', version: versions.jackson
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-annotations', version: versions.jackson
    implementation group: 'org.projectlombok', name: 'lombok', version: versions.lombok
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web'

//    implementation group: 'org.apache.commons', name: 'commons-lang3', version: '3.12.0'
    implementation group: 'commons-io', name: 'commons-io', version: '2.11.0'
    implementation group: 'com.github.fge', name: 'json-schema-core', version: '1.2.14'
    implementation group: 'com.github.fge', name: 'json-schema-validator', version: '2.2.6'
    implementation group: 'com.github.hmcts', name: 'service-auth-provider-java-client', version: '4.0.3'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-web'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-actuator'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-aop'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-json'
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-validation', version: versions.springBoot

    annotationProcessor group: 'org.projectlombok', name: 'lombok', version: versions.lombok

    implementation group: 'com.github.hmcts.java-logging', name: 'logging', version: versions.reformLoggingVersion
    implementation group: 'com.github.hmcts.java-logging', name: 'logging-appinsights', version: versions.reformLoggingVersion
    implementation group: 'com.github.hmcts', name: 'properties-volume-spring-boot-starter', version: '0.1.1'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: versions.log4JVersion
    implementation group: 'org.apache.logging.log4j', name: 'log4j-to-slf4j', version: versions.log4JVersion
    implementation group: 'io.rest-assured', name: 'rest-assured'

    testImplementation(platform('org.junit:junit-bom:5.8.2'))
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
    testImplementation group: 'org.springframework.boot', name: 'spring-boot-starter-test', {
        exclude group: 'junit', module: 'junit'
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
}

rootProject.tasks.publish.dependsOn(project.tasks.publishToMavenLocal)
